{
	"info": {
		"_postman_id": "77b0dc9c-929e-4217-a4c6-67289c2e921f",
		"name": "User Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CRUD USER",
			"item": [
				{
					"name": "create user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"user_id\", _.random(1, 5000));\r",
									"pm.environment.set(\"user_name\", 'a' +  _.random(1,500));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response NAME\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"nemo\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response FIRSTNAME\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"Diana\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response LAST NAME\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"Ezhova\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response EMAIL\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"diana-ezh@yandex.ru\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response PASSWORD\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"999999\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response PHONE\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"33\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Rio",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{user_id}}\",\r\n  \"username\": \"nemo\",\r\n  \"firstName\": \"Diana\",\r\n  \"lastName\": \"Ezhova\",\r\n  \"email\": \"diana-ezh@yandex.ru\",\r\n  \"password\": \"999999\",\r\n  \"phone\": \"33\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/user",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "read user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/nemo",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"nemo"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"{{category_id}}\", _.random(1, 5000));\r",
									"pm.environment.set(\"user_name\", 'a' +  _.random(1,500));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response NAME\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"nemo\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response FIRSTNAME\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"Diana\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response LAST NAME\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"Ezhova\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response EMAIL\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"diana-ezh@yandex.ru\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response PASSWORD\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"999999\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response PHONE\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"33\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{category_id}}\",\r\n  \"username\": \"nemo\",\r\n  \"firstName\": \"Diana\",\r\n  \"lastName\": \"Ezhova\",\r\n  \"email\": \"diana-ezh@yandex.ru\",\r\n  \"password\": \"999999\",\r\n  \"phone\": \"33\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/user",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "read user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/nemo",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"nemo"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/nemo",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"nemo"
							]
						}
					},
					"response": []
				},
				{
					"name": "read user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/nemo",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"nemo"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}